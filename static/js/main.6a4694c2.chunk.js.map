{"version":3,"sources":["Prophet.js","App.js","serviceWorker.js","index.js","assets/ezekiel.jpg"],"names":["Prophet","props","selectedFile","hosea","state","selector","this","joel","amos","obadiah","jonah","micah","nahum","habakkuk","zephaniah","haggai","zechariah","malachi","id","style","rel","as","src","process","headshot_url","name","timeframe","key_verse","key_verse_ref","pic_url","pic_cap","prophet_bio_1","prophet_bio_2","className","onClick","setState","React","Component","App","useState","visible","setVisible","fading","setFading","animationOut","isVisible","display","prophetpic","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.6a4694c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport hosea from \"./data/hosea.json\";\r\nimport joel from \"./data/joel.json\";\r\nimport amos from \"./data/amos.json\";\r\nimport obadiah from \"./data/obadiah.json\";\r\nimport jonah from \"./data/jonah.json\";\r\nimport micah from \"./data/micah.json\";\r\n\r\nimport nahum from \"./data/nahum.json\";\r\nimport habakkuk from \"./data/habakkuk.json\";\r\nimport zephaniah from \"./data/zeph.json\";\r\nimport haggai from \"./data/haggai.json\";\r\nimport zechariah from \"./data/zechariah.json\";\r\nimport malachi from \"./data/malachi.json\";\r\n\r\nexport default class Prophet extends React.Component {\r\n\r\n    selectedFile = hosea;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selector: 1};\r\n    }\r\n\r\n    render() {\r\n        // Change selected file based on index\r\n        switch(this.state.selector) {\r\n            case 1:\r\n                this.selectedFile = hosea;\r\n                break;\r\n            case 2:\r\n                this.selectedFile = joel;\r\n                break;\r\n            case 3:\r\n                this.selectedFile = amos;\r\n                break;\r\n            case 4:\r\n                this.selectedFile = obadiah;\r\n                break;\r\n            case 5:\r\n                this.selectedFile = jonah;\r\n                break;\r\n            case 6:\r\n                this.selectedFile = micah;\r\n                break;\r\n            case 7:\r\n                this.selectedFile = nahum;\r\n                break;\r\n            case 8:\r\n                this.selectedFile = habakkuk;\r\n                break;\r\n            case 9:\r\n                this.selectedFile = zephaniah;\r\n                break;\r\n            case 10:\r\n                this.selectedFile = haggai;\r\n                break;\r\n            case 11:\r\n                this.selectedFile = zechariah;\r\n                break;\r\n            case 12:\r\n                this.selectedFile = malachi;\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <div id=\"prophet-wrapper\" style={this.props.style}>\r\n                <div id=\"prophet-info-container\">\r\n                    <div id=\"prophet-header\">\r\n                        <img rel=\"preload\" as=\"image\" src={process.env.PUBLIC_URL + this.selectedFile.headshot_url} id=\"prophet-headshot\"/>\r\n                        <h1>{this.selectedFile.name}</h1>\r\n                        <p id=\"timeframe\"><i>{this.selectedFile.timeframe}</i></p>\r\n                        <p id=\"key-verse\">\r\n                            {this.selectedFile.key_verse}\r\n                            <br/>\r\n                            <i>{this.selectedFile.key_verse_ref}</i>\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"prophet-bio\">\r\n                        <div id=\"prophet-bio-left\">\r\n                            <img rel=\"preload\" as=\"image\" src={process.env.PUBLIC_URL + this.selectedFile.pic_url}/>\r\n                            <span>{this.selectedFile.pic_cap}</span>\r\n                        </div>\r\n                        <div id=\"prophet-bio-right\">\r\n                            <div id=\"prophet-bio-paragraph\">\r\n                                <p>{this.selectedFile.prophet_bio_1}</p>\r\n                                <p>{this.selectedFile.prophet_bio_2}</p>\r\n                            </div>\r\n                            {/*<div id=\"prophet-bio-bullets\">*/}\r\n                            {/*    <ul>*/}\r\n                            {/*        <li></li>*/}\r\n                            {/*        <li></li>*/}\r\n                            {/*        <li></li>*/}\r\n                            {/*    </ul>*/}\r\n                            {/*</div>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"cycle-wrapper\">\r\n                    <div>\r\n                        <i className={\"fas fa-arrow-left \" + (this.state.selector == 1 ? 'hide-arrow' : 'show-arrow')} onClick={() => {\r\n                            if (this.state.selector > 1) {\r\n                                this.setState({selector: (this.state.selector - 1)});\r\n                            }\r\n                        }}></i>\r\n                        {/*{this.state.selector}*/}\r\n                        <i className={\"fas fa-arrow-right \" + (this.state.selector == 12 ? 'hide-arrow' : 'show-arrow')} onClick={() => {\r\n                            if (this.state.selector < 12) {\r\n                                this.setState({selector: (this.state.selector + 1)});\r\n                            }\r\n                        }}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useState} from 'react';\nimport prophetpic from './assets/ezekiel.jpg';\nimport './App.css';\nimport Prophet from \"./Prophet\"\nimport { Animated } from \"react-animated-css\";\n\nfunction App() {\n    const [visible, setVisible] = useState(true);\n    const [fading, setFading] = useState(false);\n\n    function hideMe() {\n        setFading(true);\n        setTimeout(() => setVisible(false), 650);\n    }\n\n    return (\n            <div id=\"container\">\n                <Animated animationOut=\"fadeOutUp\" isVisible={!fading} style={visible ? null : { display: \"none\" }}>\n                    <div id=\"entry-welcome\">\n                        <div id=\"welcome-middle\">\n                            <img src={prophetpic}/>\n                            <h1>The Minor Prophets</h1>\n                            <p>made by Matteo Grilla</p>\n                            <i className=\"fas fa-arrow-circle-down\" onClick={hideMe}></i>\n                        </div>\n                    </div>\n                </Animated>\n                <Prophet id=\"prophet\" style={!visible ? null : { display: \"none\" }}/>\n            </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ezekiel.66644742.jpg\";"],"sourceRoot":""}